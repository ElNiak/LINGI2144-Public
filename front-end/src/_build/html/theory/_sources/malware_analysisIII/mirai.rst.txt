Case Study: Mirai
------------------

Preamble: Denial of Service (DoS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A **Denial of Service** (DoS) attack aims at preventing a target from
providing its service.

-  Most common: attack a server to take down a website

-  If server detects the attack, it can “blacklist” the attacker, i.e.
   ignore all packets coming from the attacker

-  Solution: Attack from a lot of IPs → **Distributed Dos** (DDoS)

How to DDos
^^^^^^^^^^^

-  Attacker infects lots of devices (called zombies or **bots**)

-  Zombies await for commands from a **Command & Control** (C&C) server

-  To DDoS attack, the C&C server orders all zombies to flood the victim
   with requests

-  Zombies can use **amplification** techniques to increase attack size
   (e.g DNS amplification)

-  Very hard to know who to blacklist!

..  image:: image/30.PNG
   :scale: 50%
   :align: center

The Mirai botnet trojan
^^^^^^^^^^^^^^^^^^^^^^^

-  Where do you find a lot of Internet connected, low security devices?

-  In the Internet of Things! (IoT ) almost zero security! Mirai is a
   botnet trojan infecting IoT devices (targets Linux, mostly CCTVs and
   DVRs)

Mirai botnet: timeline
~~~~~~~~~~~~~~~~~~~~~~

#. 20th-22nd September 2016:

   -  620 Gbps DDoS to KrebsOnSecurity using  120k devices.

   -  1 Tbps DDoS to French hosting OVH using  150k devices

   "*According to Akamai, it was nearly double the size of the largest
   attack they’d seen previously, and was among the biggest assaults the
   internet has ever witnessed*"

#. 30th September 2016: Mirai author Anna-senpai releases source code
   hoping to divert attention (did not work, authors pleaded guilty on
   Dec 2017)

How does it work ?
~~~~~~~~~~~~~~~~~~

#. Vulnerable IoT devices exposed in the Internet are scanned

#. Botnet malware is installed on the IoT devices that use common
   password (63 are tried in)

#. | IoT device connects connect to C&C
   | Receive a payload that corresponds to their architecture

#. | Awaits instructions from the C&C
   | Example: please perform a DDOS attack on victim X

Mirai in the wild
~~~~~~~~~~~~~~~~~~

Remember: source code has been released

-  Different Mirai versions :math:`=` notion of **family**

-  Different servers and IP that are scanned (XOR domain), or

-  Different C&C → different version

Mirai trojan: infective behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Mirai trojan **bot** is the core of the botnet:

-  **Deletes itself** from disk :math:`\Rightarrow` hard to detect

-  **Modifies its process name** into a random string

-  **Kills all processes listening on** TCP ports 22 (SSH), 23 (Telnet), 80
   (HTTP)

-  **Generates random IPs** to scan avoiding dangerous subnets e.g. NSA

-  Attempts to login with **60 default username/password pairs** (not very
   complicated one in this case)

-  **Signals vulnerable IPs** and credentials to Mirai server

-  Finally, the bot **waits for instructions from C&C server**